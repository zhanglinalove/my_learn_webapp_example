{"version":3,"sources":["../../src/routes/router.api.js"],"names":["express","require","router","Router","PostModel","UserModel","bcrypt","config","auth","get","req","res","next","send","find","err","posts","json","success","postsList","post","adminRequired","title","body","content","console","log","authorId","locals","currentUser","_id","save","doc","id","query","findOne","patch","params","findOneAndUpdate","name","pass","rePass","Error","user","hashSync","end","isOK","compareSync","authToken","opts","path","maxAge","signed","httpOnly","cookie","cookieName","module","exports"],"mappings":"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","file":"router.api.js","sourcesContent":["var express = require('express');\nvar router = express.Router();\nvar PostModel = require('../models/post');\nvar UserModel = require('../models/user');\nvar bcrypt = require('bcrypt');\nvar config = require('../config');\nvar auth = require('../middlewares/auth');\n\n/* GET users Lists. */\nrouter.get('/api/v1/users', function(req, res, next) {\n  res.send('Respond with a Users!');\n});\n\n\n/* Get posts Lists */\n\nrouter.get('/posts', function( req, res ,next){\n\n  PostModel.find( {}, {},function(err,posts){\n    if(err){\n       next(err);\n    } else{\n\n      res.json({ success:true,postsList: posts});\n    }\n    \n\n  })\n});\n\n\n/* Post posts Lists */\n\nrouter.post('/posts',auth.adminRequired, function( req, res ,next){\n  var  title = req.body.title;\n  var content = req.body.content;\n\n  console.log(title);\n  var  post = new PostModel();\n  post.title =title;\n  post.content = content;\n  post.authorId = res.locals.currentUser._id;\n  post.save(function (err, doc){\n    if(err){\n      next(err);\n    } else{\n      res.json({ post:doc });\n    }\n    \n  });\n  \n  //res.send({ title,content }); //收到数据后，把数据返回给了请求方\n\n\n});\n\n/* get one post*/\nrouter.get('/posts/:id',function(req ,res , next){\n  var id = req.query.id;\n  PostModel.findOne ({_id :id }, function( err, post){\n    if(err){\n      next(err);\n    } else{\n      res.json ({ success : true, post});\n    }\n  });\n\n});\n\n/* Patch edit post */\nrouter.patch('/posts/:id',auth.adminRequired, function( req ,res ,next){\n\n  var  id = req.params.id;\n  var title =req.body.title;\n  var content = req.body.content;\n\n  PostModel.findOneAndUpdate({_id : id },{ title ,content}, function(err){\n      if (err){\n        next(err);\n      } else{\n        res.json({ success : true});\n      }\n\n  });\n\n});\n\n\n/* Post signup user */\n\nrouter.post('/signup', function(req ,res ,next){\n  var name = req.body.name;\n  var pass = req.body.pass;\n  var rePass = req.body.rePass;\n  console.log(pass);\n  if( pass !== rePass){\n    return next( new Error('两次密码不对'));\n  }\n\n  console.log('你好棒啊！');\n\n\n  var user = new UserModel();\n  user.name = name ;\n  console.log(user.name);\n  user.pass = bcrypt.hashSync(pass,10);\n  console.log(bcrypt.hashSync('111111',10));\n  //console.log(bcrypt.gensalt('11111'));\n\n  console.log(user.pass);\n  user.save ( function(err){\n    if(err){\n      next(err);\n    }else{\n      console.log('程序执行结果了啊');\n      res.end();\n    }\n  });\n});\n\n/* Post signin user */\n\nrouter.post('/signin',function( req ,res ,next){\n  var  name = req.body.name || '';\n  var  pass = req.body.pass || '';\n\n  UserModel.findOne( {name},function (err, user){\n    if( err || !user){\n      return next( new Error('找不到用户'));\n    } else{\n      var isOK = bcrypt.compareSync( pass ,user.pass);\n      if(!isOK){\n        return next(new Error('密码不对'));\n      }\n\n      var authToken = user._id ;\n      var opts ={\n        path :'/',\n        maxAge : 1000 * 60 * 60 * 24 * 30 ,\n        signed : true,\n        httpOnly : true\n\n      };\n\n      res.cookie( config.cookieName ,authToken ,opts);\n      res.end();\n    }\n  });\n\n});\n\n\n\nmodule.exports = router;\n"]}